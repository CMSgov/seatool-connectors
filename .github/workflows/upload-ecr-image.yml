name: ECR Image
on:
  push:
    branches: ["reggie"]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-20.04
    environment:
      name: ${{ github.ref_name }}
    env:
      STAGE_NAME: ${{ github.ref_name }}
    permissions:
      id-token: write
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Install AWS CLI
        id: install-aws-cli
        uses: unfor19/install-aws-cli-action@master
      - run: aws --version
        shell: bash
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_TO_ASSUME }}
          aws-region: us-east-1
          role-duration-seconds: 10800
      - name: Upload connector image if needed
        # run: ${PWD}/scripts/connector-image.sh
        run: |
          output=$(aws ecr describe-repositories --repository-names confluentinc/ksqldb-server 2>&1)
          acct=$(aws sts get-caller-identity --query "Account" --output text)
          if echo ${output} | grep -q RepositoryNotFoundException; then
            echo does not exist
            docker pull confluentinc/ksqldb-server:0.26.0
            aws ecr create-repository --region ${env.AWS_REGION} --repository-name confluentinc/ksqldb-server:0.26.0
            docker tag confluentinc/ksqldb-server:0.26.0 ${acct}.dkr.ecr.${env.AWS_REGION}.amazonaws.com/confluentinc/ksqldb-server:0.26.0
            aws ecr get-login-password --region ${env.AWS_REGION} | docker login --username AWS --password-stdin ${acct}.dkr.ecr.${env.AWS_REGION}.amazonaws.com
            docker push ${acct}.dkr.ecr.${env.AWS_REGION}.amazonaws.com/confluentinc/ksqldb-server:0.26.0
          else
            echo already exists
          fi
